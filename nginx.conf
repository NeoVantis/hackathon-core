events {
    worker_connections 1024;
}

http {
    upstream hackathon_backend {
        server hackathon-core:3002;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    server {
        listen 80;
        server_name localhost hackathon-api.neovantis.xyz;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Proxy settings
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API routes
        location /api/ {
            proxy_pass http://hackathon_backend;
            proxy_timeout 60s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Health check
        location /health {
            proxy_pass http://hackathon_backend/health;
        }

        # Handle file uploads
        location /uploads/ {
            client_max_body_size 50M;
            proxy_pass http://hackathon_backend;
        }

        # Static files (if any)
        location /static/ {
            alias /usr/share/nginx/html/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # HTTPS configuration (uncomment and configure certificates for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name hackathon-api.neovantis.xyz;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers HIGH:!aNULL:!MD5;
    #
    #     # Same configuration as HTTP server above
    #     # ...
    # }
}