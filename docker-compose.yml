version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: hackathon-postgres
    environment:
      POSTGRES_DB: hackathon_db
      POSTGRES_USER: hackathon_user
      POSTGRES_PASSWORD: hackathon_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - hackathon-network

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: hackathon-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hackathon-network

  # Hackathon Core Application
  hackathon-core:
    build: .
    container_name: hackathon-core-app
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: hackathon_user
      DB_PASSWORD: hackathon_password
      DB_DATABASE: hackathon_db
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your_super_secure_jwt_secret_key}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL:-http://localhost:3000/api/v1}
      NOTIFICATION_SERVICE_URL: ${NOTIFICATION_SERVICE_URL:-http://notification-service.neovantis.xyz/api/v1}
    depends_on:
      - postgres
      - redis
    volumes:
      - uploads_data:/usr/src/app/uploads
      - logs_data:/usr/src/app/logs
    networks:
      - hackathon-network
    restart: unless-stopped

  # Nginx (Optional - for load balancing/reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: hackathon-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - hackathon-core
    networks:
      - hackathon-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  uploads_data:
  logs_data:

networks:
  hackathon-network:
    driver: bridge